<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<style>
    *{
        box-sizing: border-box;
        
    }
    body{ position: relative;
        transition: 0.2s;
    }
    .container{
        display: flex;
        flex-direction: column;
        flex-wrap: nowrap;
        justify-content: center;
        text-align: center;
    }
    .chat{
        background-color: rgba(53, 51, 51, 0.289);
        width:70%;
        margin: 1em;
        display: block;
        text-align: left;
        margin: 1em;
        padding: 1em;
        border: 0.08em black dotted;
        border-radius: 1em;

    }
    .user{
        background-color: rgba(61, 218, 64, 0.603);
        margin:0.5em 0 0.5em 0;
        padding: 0.5em;
        width: 20%;
        text-align: center;
        border-radius: 2em;
        border: 0.08em black solid;
        
    }
    .msg-display{
        background-color: rgba(6, 69, 170, 0.34);
        margin:0.5em 0 0.5em 0;
        padding: 0.5em;
        white-space: normal;
        max-width: 90%;
        border-radius: 0.8em;
        border: 0.08em black solid;
    }
    .msg-display p{
        overflow-wrap: break-word;

    }
    .connection-log{
        background-color: rgba(10, 203, 116, 0.501);
        border-radius: 0.8em;
        border: 0.08em black solid;
        overflow-wrap:break-word;
        padding: 1em;
        width:30%;
        margin: 1em;
    }
    
    .connection-log h4{
        font-size: 1.2em;
        font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        padding-bottom: 1em;
        border-bottom: 0.08em solid rgba(0, 0, 0, 0.436);
    

    }
    .area{
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        justify-content: center;
        width: 100%;

    }
    h2{
        text-align: center;
        border-bottom: 0.08em solid rgba(0, 0, 0, 0.436);
        color:rgb(80, 80, 203);
        padding-bottom:1em;
        font-size: 2em;
        font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    .log-container{
        position: relative;
        overflow-y: auto;
        max-height: 42em;
        padding: 0.5em;
    }
    .log-container p{
      padding-right:1em;
      font-weight: bold;
    }
    .log-container div p{
        font-weight:lighter;
    }
    .chat-container{
        overflow-y: auto;
        max-height: 50em;
        scrollbar-gutter: stable;

        
    }
    ::-webkit-scrollbar{
        width:1em;
    }
    ::-webkit-scrollbar-thumb{
        background-color: rgba(78, 77, 77, 0.674);
        border: black 0.08em solid;
        border-radius: 2em;
        transition: 0.2s;
       
    }
    ::-webkit-scrollbar-thumb:hover{
        background-color: rgba(78, 77, 77, 0.8);
       
    }
    ::-webkit-scrollbar-track{
        background-color: rgba(39, 48, 86, 0.322);
        border: black 0.08em solid;
        border-radius: 2em;
        margin: 0.5em;
    }
   ::-webkit-scrollbar-button{
    background-color:transparent;
    border-radius: 0.4em;
    border: black 0.08em solid;
   
   }
   ::-webkit-scrollbar-button:hover{
    background-color: #00000047;
   
   }
   .send{
    padding: 1em;
    border-radius: 0.4em;
    border: black 0.08em solid;
    margin: 1em 1.8em;
    object-fit: cover;
   }
   button{
    color: #000000;
    background-color:transparent ;
    border-radius: 0.4em;
    border: black 0.08em solid;
    padding: 1em;
   cursor: pointer;
        transition: 0.2s;
    
    }
    button:hover{
        background-color: #0f137e73;
        transition: 0.2s;
    }
    .send input[type="text"]{
        padding: 0.9em;
        width: 63%;
        transition: 0.2s;border-radius: 0.4em;
    border: black 0.08em solid;
    
   
    }
    .send input[type="text"]:hover{
       background-color: rgba(7, 249, 144, 0.295);
       transition: 0.2s;
    }
    #a-log{
        margin: 2em;
    }
    #msg{
        display: flex;
        flex-direction: column;
        margin-top: 2em;
        margin-bottom: 2em;
    }
    #delete{
        opacity: 0;

        transition: 0.2s;
    }
    #msg:hover #delete{opacity: 1;
transition: 0.2s;

    }
    #delete:hover{

background-color: rgba(201, 11, 11, 0.474);


    }
    .me{
       align-items: end;
    }
    .me .user{
        background-color: aquamarine;
    }
    .me .msg-display{
        background-color: rgba(20, 39, 212, 0.629);
    }
    #a-log {
    border: black 0.08em solid;
    align-items: center;
    text-align: center;
    border-radius:1em ;
    padding-left: 1em;
    background-color: #07806ca1;
    transition: 0.2s;

    }
    
    #a-log:hover{
    background-color: transparent;
    transition: 0.2s;

    }
    .username{
    margin-right: 0.3em;


    }
    .recent{
    background-color: transparent !important;

    }
    #check{
        position: absolute;
        top:40%;
        left:40%;
        background-color: rgb(255, 255, 255);
        align-items: center;
        text-align: center;
        padding: 1em;
        border-radius: 1em;
    border: black 0.08em solid;
    z-index: 5;
    opacity: 0;
    display: none;
    transition: 0.2s !important;
    }
    .yes{
        color:rgba(209, 86, 86, 0.771);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        font-weight: bold;
        border: rgba(222, 52, 52, 0.767) 0.123em solid;
        }
    .no{
        color:rgba(6, 100, 223, 0.662);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        font-weight: bold;
        border: rgba(6, 100, 223, 0.679) 0.123em solid;
        }
    .yes:hover{
        color:white;
        border: rgba(222, 52, 52, 0.767) 0.123em solid;
        background-color: rgba(222, 52, 52, 0.767);
        transition: 0.2s;
        }
    .no:hover{
        color:white;
        border: rgba(6, 100, 223, 0.679) 0.123em solid;
        background-color: rgba(6, 100, 223, 0.679) ;
        transition: 0.2s;
        }
    .blackout{
        background-color: #00000072;
        transition: 0.2s;
    }
    .popup1{
        display: block !important;
    transition: 0.2s ;
    }
    .popup2{
        opacity: 1 !important;
    transition: 0.2s ;
    }
    #soundboard{
        display: none;
        position: relative;
        align-items: center;
        text-align: center;
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: center;
        border: 0.08em black solid;
        border-radius: 0.5em;
        padding: 0.1em;
        width: 0%;
        height: 0%;
        opacity: 0;
        transition: all 0.2s linear;


    }
    .sound{
        padding: 1em;
        position: relative;
        margin: 1em;
        border: 0.08em black solid;
        cursor: pointer;
        transition: all 0.2s;

    }
    .sound img{
        width: 2em;
        height: 2em;
    }
    .sound:hover{
        background-color: #00000073;
        color: rgba(0, 89, 255, 0.725);
        border-radius: 0.5em;
        transition: all 0.2s;


    }
    #soundboard h4{
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
        width: 100%;
        margin: 1em;
        padding-bottom: 1em;
        border-bottom: 0.08em black solid;

    }
    #sound-btn,#mute-btn{
        
        padding: 0.5em;
        margin: 0.5em;
    }
    #sound-btn img,#mute-btn img{
        opacity: 1;
        width: 2em;
        height: 2em;
        transition:all 0.1s linear;


    }
    .pop1{
        width: 100% !important;
        height:20%!important;
        transition: all 0.2s linear;

    }
    .pop2{opacity: 1 !important;
        transition: all 0.2s;

    }
    .hide{
        opacity: 0 !important;
        transition:all 0.1s linear;
    }
</style>
<body>
    <form id="check">
        <div></div><!--dont touch-->
        <button class="yes" value="yes" type="submit">YES</button>
        
        <button class="no" value="no" type="submit">NO</button>
    </form>
    <div class="container">
        <div class="area">
        <div class="chat">
            <button id="sound-btn"><img src="sound-waves.png" id="soundboard-img"></button>
            <button id="mute-btn"><img src="audio.png" id="mute-img"></button>
            <div id="soundboard">
                <h4>SoundBoard</h4>
                <button class="sound" id="sound1" type="button"><audio id="s1" src="fart.mp3" type="mp3"></audio><img src='fart.png'></button>
                <button class="sound" id="sound2" type="button"><audio id="s2" src="clap.mp3" type="mp3"></audio><img src='clap.png'></button>
                <button class="sound" id="sound3" type="button"><audio id="s3" src="bruh.mp3" type="mp3"></audio><img src='bruh.png'></button>
                
            </div>
            <h2>General Chat</h2>
            <div id="chat-container" class="chat-container">
                <%
                let counter=0,mycount=0;
                all.forEach((e)=>{counter++;
                    let self=''
                    if(e.senderId==user.email)self='me'%>
                <div id="msg" class="<%=self%>">
                    <div class="user">Mr(s) <%=e.senderName%></div>
                    <div class="msg-display" id="<%=counter%>"><p><%=e.message%> </p>
                    <%if(user.email==e.senderId&&e.message!='Message Deleted'){mycount++;%><form id='form<%=mycount%>' class="delete-form">
                        <input id="messagetodelete" type="hidden" value="<%=e.message%>">
                        <button type="submit" id="delete"  value="<%=counter%>">Delete</button></form><%}%>
                </div>
                </div>
                

               <% })%>
            </div>
                
        </div>
        <div class="connection-log" id="connection-log">
            <h4>Activity Log</h4>
            <div class="log-container" id="log-container">
            <% logs.forEach((e)=>{%>
                <div id="a-log">
                    <% if(e.email==user.email){%>
                        <p class="username">You</p>

                    <%}else{%>
                    <p class="username"><%=e.username%></p><%}%>
                    <div><p><%=e.status%></p></div>
                </div>

            <%})%>
            
        </div>
        </div>

       </div>
        <div class="send">
            <form id="sender">
                <input type="text" id="message" placeholder=">">
                <input type="hidden" id="senderName" value="<%=user.username%>">
                <input type="hidden" id="senderId" value="<%=user.email%>">
                <button type="submit">Send</button>
            </form>
        </div>
    </div>
<script src="/socket.io/socket.io.js"></script>
<script id="ejs" type="application/json" nm="<%=numberOfMessages%>"></script>
<script>
    let socket=io();
    function empty(s){
        let n=s.length
        for(let i=0;i<n;i++){
            if(s[i]!=' ')return false;
        }return true;
    } 
let frm=document.getElementById('sender');
let ejs=document.getElementById('ejs');
let nm=parseInt(ejs.getAttribute('nm'))
let frmcount=document.getElementsByClassName('delete-form').length
    let maindiv=document.createElement('div');
    let userdiv=document.createElement('div');
    let displaydiv=document.createElement('div');
    let messagep=document.createElement('p');
    let message=document.getElementById('message').value;
    //initiating elements
    let id=document.getElementById('senderId').value;
    let name=document.getElementById('senderName');
    let cnt=document.getElementById('chat-container');
    cnt.scrollTop=cnt.scrollHeight;
    //to keep scrollbar always updating
   
frm.addEventListener('submit',(e)=>{
    e.preventDefault();
     message=document.getElementById('message').value;
    //initiating elements
     id=document.getElementById('senderId');
     name=document.getElementById('senderName');
     cnt=document.getElementById('chat-container');

     
    
    if(!empty(message)){
   //data gathering
    let data={};
    data.id=id.value;
    data.message=message;
    data.username=name.value;
    let messagediv=document.getElementById('message')
    messagediv.value='';
    socket.emit('Sent',data);
    setTimeout(()=>socket.emit('new message',id.value),500);
    //reset failsafe


                
    }

})


socket.on('broadcast',(dt)=>{
  nm++;
    let maindiv=document.createElement('div');
    let userdiv=document.createElement('div');
    let displaydiv=document.createElement('div');
    let messagep=document.createElement('p');

  //filling
  maindiv.id='msg';
    maindiv.className=dt.me;
    userdiv.className='user';
    displaydiv.className='msg-display';
    messagep.innerText=dt.message;
    userdiv.innerText=dt.username;
    console.log("sent");
  //appending elements
    displaydiv.appendChild(messagep);
   displaydiv.id=nm;


    
    
   if(dt.me=='me'){
     frmcount++;
   let newform=document.createElement('form');
   displaydiv.id=nm
   newform.id='form'+frmcount;
   newform.className='delete-form';

   let newinput=document.createElement('input');
   newinput.id='messagetodelete';
   newinput.type='hidden';
   newinput.value=dt.message;

   let newbtn=document.createElement('button');

   newbtn.type='submit';
   newbtn.id='delete';
   newbtn.value=nm;
   newbtn.textContent='Delete';

   newform.appendChild(newinput);
   newform.appendChild(newbtn);
   displaydiv.appendChild(newform);

   
newform.addEventListener('submit',(e)=>{
    e.preventDefault();
    console.log("now");
    let baton=e.submitter;
    let checkform=document.getElementById('check');
    let bd=document.querySelector('body')
    let checkmessage=document.createElement('p');
    let msg=newform.getElementsByTagName('input')[0]; 
    checkmessage.innerText='Do You Really want to Remove this Message? \n"'+msg.value+'"'
   let contain= checkform.getElementsByTagName('div')[0];
   contain.replaceChildren(checkmessage);
    setTimeout(()=>{checkform.classList.add('popup1');},0);
    setTimeout(()=>{checkform.classList.add('popup2');},200);
    bd.className='blackout'
    checkform.addEventListener('submit',(ev)=>{
        ev.preventDefault();
        let btn=ev.submitter;//5555555
        if(btn.value=='yes'){
    let message=document.getElementById(baton.value);
    message.textContent='Message Deleted'
    socket.emit('delete-message',baton.value)
            
        }
        else{baton=null;
        }
        //remove check
    setTimeout(()=>{checkform.classList.remove('popup2');},200);
    setTimeout(()=>{checkform.classList.remove('popup1');},0);
    bd.className=''
    })


})


   }
    












    maindiv.appendChild(userdiv);
    maindiv.appendChild(displaydiv);
    cnt.appendChild(maindiv);
    //to keep scrollbar always updating

    cnt.scrollTop=cnt.scrollHeight;




    
})




let username;
let joiner=name.value;
socket.emit('user_incoming',{username:joiner,id:id});
socket.on("user_came",(data)=>{
    let cnt=document.getElementById('log-container');
    let log=document.createElement('div');
    let un=document.createElement('p');
    let tc=document.createElement('div');
    let status=document.createElement('p');
    let all=document.getElementById('connection-log');
    log.id='a-log';
    cnt.className='log-container';
    cnt.id='log-container';
    let username=data;
    un.innerText=username;
    status.innerText='Just Joined The Chat';
    tc.appendChild(status);
    log.appendChild(un);
    log.appendChild(tc);
    cnt.lastElementChild.classList.remove('recent');
    log.classList.add('recent')
    cnt.appendChild(log);
    cnt.scrollTop=cnt.scrollHeight

})
//leaving section
window.addEventListener('beforeunload',()=>{
   // socket.emit('user_leaving',username);
socket.emit('user_leaving',{username:joiner,id:id});
})
socket.on("user_left",(data)=>{console.log("bye user");
    let cnt=document.getElementById('log-container');
    let log=document.createElement('div');
    let un=document.createElement('p');
    let tc=document.createElement('div');
    let status=document.createElement('p');
    let all=document.getElementById('connection-log');
    log.id='a-log';
    cnt.className='log-container';
    cnt.id='log-container';
     username=data;
    un.innerText=username;
    status.innerText='Just Left The Chat';
    tc.appendChild(status);
    log.appendChild(un);
    log.appendChild(tc);
    cnt.lastElementChild.classList.remove('recent');
    log.classList.add('recent')
    cnt.appendChild(log);
    cnt.scrollTop=cnt.scrollHeight

})
//deleting message part




let dlt=document.getElementsByClassName('delete-form');
for(let k =0;k<dlt.length;k++)
{    let count=JSON.stringify(k+1);
    let ided='form'+count
    let element =document.getElementById(ided);
    
element.addEventListener('submit',(e)=>{
    e.preventDefault();
    let baton=e.submitter;
    let checkform=document.getElementById('check');
    let bd=document.querySelector('body')
    let checkmessage=document.createElement('p');
    let msg=element.getElementsByTagName('input')[0]; 
    checkmessage.innerText='Do You Really want to Remove this Message? \n"'+msg.value+'"'
   let contain= checkform.getElementsByTagName('div')[0];
   contain.replaceChildren(checkmessage);
    setTimeout(()=>{checkform.classList.add('popup1');},0);
    setTimeout(()=>{checkform.classList.add('popup2');},200);
    bd.className='blackout'
    checkform.addEventListener('submit',(ev)=>{
        ev.preventDefault();
        let btn=ev.submitter;//5555555
        if(btn.value=='yes'){
    socket.emit('delete-message',baton.value)
    let message=document.getElementById(baton.value);
    message.textContent='Message Deleted'
            
        }
        else{baton=null;
        }
        //remove check
    setTimeout(()=>{checkform.classList.remove('popup2');},200);
    setTimeout(()=>{checkform.classList.remove('popup1');},0);
    bd.className=''
    })


})

}
socket.on('message-deleted',(data)=>{
    console.log(data);
    let message=document.getElementById(data);
    console.log(message);
    message.textContent='Message Deleted';


})

//soundboard code
let soundbtn=document.getElementById('sound-btn');
let mutebtn=document.getElementById('mute-btn');
let soundbrd=document.getElementById('soundboard');
let chatcnt=document.getElementById('chat-container');
let muted=false;
soundbtn.addEventListener('click',(e)=>{
    e.preventDefault();
    let sndbrdimg=document.getElementById('soundboard-img');
    //invisible
    if(!soundbrd.classList.length){
        //sizing
        setTimeout(()=>{
        soundbrd.classList.add('pop1');},100)
        soundbrd.style.display='flex'
        //opacity
        
        setTimeout(()=>{
        soundbrd.classList.add('pop2');},400)
        //chat container resize
        chatcnt.style.maxHeight='30em';
        sndbrdimg.className='hide';
        setTimeout(()=>{sndbrdimg.src='cancel.png';sndbrdimg.className=''},500);
       

    }
    //visible
    else{
        //sizing
        soundbrd.classList.remove('pop2');
        //opacity
        setTimeout(()=>{
        soundbrd.classList.remove('pop1');
        chatcnt.style.maxHeight='50em';},300)
        setTimeout(()=>{
        
        soundbrd.style.display='none'},500)
        //chat container resize
        sndbrdimg.className='hide';
        setTimeout(()=>{sndbrdimg.src='sound-waves.png';sndbrdimg.className='';},300);

    }
    
})
//music play
let btn1=document.getElementById('sound1');
let btn2=document.getElementById('sound2');
let btn3=document.getElementById('sound3');

let m1=document.getElementById('s1');
let m2=document.getElementById('s2');
let m3=document.getElementById('s3');
btn1.addEventListener('click',(e)=>{
    e.preventDefault();
    if(!muted){
    m1.currentTime=0;
  m1.play();

    }
    socket.emit("sound",'s1');
})

btn2.addEventListener('click',(e)=>{
    e.preventDefault();
    
    if(!muted){
    m2.currentTime=0;
  m2.play();}
    socket.emit("sound",'s2');
})

btn3.addEventListener('click',(e)=>{
    e.preventDefault();
    if(!muted){
    m3.currentTime=0;
  m3.play();}
    socket.emit("sound",'s3');
})
socket.on("sound",(data)=>{
    let auded=document.getElementById(data);
    if(!muted)auded.play();

})



//mute btn
mutebtn.addEventListener('click',(e)=>{
    e.preventDefault();
    let muteimg=document.getElementById('mute-img');
    if(muted==true){
        muted=false;
        muteimg.className='hide';
       setTimeout(()=>{muteimg.src='audio.png';muteimg.className=''},100) 

   
    }
    else{
        muted=true;
        m1.pause();
        m2.pause();
        m3.pause();
        m1.currentTime=0;
        m2.currentTime=0;
        m3.currentTime=0;
        muteimg.className='hide';
       setTimeout(()=>{muteimg.src='audio_mute.png';muteimg.className=''},100) 


    }
    
})
//.......
//***************





</script>
</body>
</html>