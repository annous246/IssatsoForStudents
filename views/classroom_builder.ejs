<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<style>
    *{
        box-sizing: border-box;
        margin: 1em;
    }
    body{
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        text-align: center;
        opacity: 1;
    }
    select{
        padding:2em 5em;
        background-color: rgba(0, 128, 255, 0.656);
        border:0.08em solid black;
        font-weight: bold;
        font-size: 1rem;
        color: wheat;
    }
    option{
        background-color: rgba(0, 34, 167, 0.041);
        border-radius: 1em;
    }
    #control{
        display: grid;
        grid-template-areas:"prev  next" ;
        flex-direction: row;
        width: 100%;
        margin: 0;
        
    }
    #control button{
        padding:1em ;
        transition: all 0.2s;

    }
    #control button:hover{
        background-color: rgba(0, 255, 94, 0.595) !important;
        transition: all 0.2s;
    }
    #control #prev{
        grid-area: prev;
        justify-self: start;
        align-self: start;
        align-content: start;
        justify-content: start;
        background-color: white;
        border:0.08em solid black;
        border-radius: 1em;
        cursor: pointer;
        width: 20%;


    }
    #control #next{
        grid-area: next;
        justify-self: end;
        align-self: end;
        align-content: end;
        justify-content: end;
        background-color: white;
        border:0.08em solid black;
        border-radius: 1em;
        cursor: pointer;

        width: 20%;

    }
    h1{
        border:0.08em solid black;
        padding: 2em 6em;



    }
    #container{
        opacity: 1 ;
        
        transition: all 0.5s ease-in ;

    }

    .hide{
        opacity: 0 !important;
        
        transition: all 0.5s ease-in !important;
    }
    #container{
        display: flex;
        flex-direction: column;
        flex-wrap: nowrap;
        align-items: center;
        text-align: center;
        justify-content: center;
    }
#description-container,#tags,#title-container{
    border: 0.08em solid black;
    border-radius: 0.4em;
    padding: 2em;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
}
input{
    text-align: center;
    width: 100%;
}
.tag-adder{
    background-color: white;
    border: 0.08em solid black;
    border-radius: 0.4em;
    padding: 1em;
    color: white;
    background-color: rgba(47, 255, 0, 0.503);
    font-weight: bold;
    transition: all 0.2s;
    cursor: pointer;
}
.tag-adder:hover{
    background-color: white;
    color: rgba(47, 255, 0, 0.503);
    transition: all 0.2s;


}
#tag{
    border: 0.08em solid black;
    border-radius: 0.4em;
    padding: 0.1em 2em;
    align-items: center;
    text-align: center;
    background-color: rgba(4, 78, 252, 0.66);
    color: white;
    font-weight: bold;

}
.remover{
    border: 0.08em solid black;
    border-radius: 2em;
    padding: 0.5em;
    margin-left:2em;

}
#warn{
    position: fixed;
    top:0;
    border: 0.08em solid rgba(237, 0, 0, 0.627);
    background-color:rgba(237, 0, 0, 0.627); ;
    color: wheat;
    padding: 0.2em 2em;
    opacity: 0;
    transition: all 0.2s;

}
.appear{
    opacity: 1 !important;
    transition: all 0.2s !important;

}
#vis-container{
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    text-align: center;


}
.visibility{
    opacity: 1;
    border: 0.08em solid black;
    border-radius: 2em;
    margin: 1em;

}
.visibility button{
    margin: 0;
    background-color: transparent;
    border: none;
    cursor: pointer;
    padding: 4em;
    color: white;
    font-weight: bold;
    font-size: 1.2em;
}
#public{
    background-color: rgb(4, 245, 104);
    transition: all 0.2s

}
#private{
    background-color: rgb(4, 112, 245);
    transition: all 0.2s

    
}
.dim{
    opacity: 0.5 !important;
    transition: all 0.2s !important;
}
</style>
<body>
    <div id="warn">warning!</div>
    <div id="control">
<button id="prev">Prev</button>
<button id="next">Next</button>
</div>
<div id="container">
 <div id="progress">
  o-----o
 </div>
    
    <select>
        
        <option value="">Domain</option>
        <option value="C++">C++</option>
        <option value="JAVA">JAVA</option>
        <option value="PYTHON">PYTHON</option>
    </select>
    
</body>
<script id="ejs" userbadges="<%=userbadges%>" user="<%=user%>"></script>
<script src="/socket.io/socket.io.js"></script>
<script>
    function empty(g){
        for(let k in g){
            if(g[k]!=' ')return false}
            return true;
    }
    function trigger(message){
        let warn=document.getElementById('warn');
                warn.textContent=message
                warn.className='appear';

                setTimeout(()=>{warn.className=''},3200)
    }

    function clean(s){let res=[],aux='';
        for(let k in s){
            if(s[k]==','||s[k]=='"'||s[k]=="'"){res.push(aux);aux='';continue};
            aux+=s[k];



        }
        let ans=[]
        for(let k in res)if(res[k]!='')ans.push(res[k]);
        return ans;
    }
    
    let pager=1;
    let removerid=1;//for tags
    let prev=document.getElementById('prev')
    let next=document.getElementById('next');
    let cnt=document.getElementById('container');
    let selectiondata='';
    let classroomtitle='';
    let classroomdesc='';
    let classroomtags=[];
    let socket=io();
    let ejs=document.getElementById('ejs');
    let userbadges=ejs.getAttribute('userbadges');
    let user=ejs.getAttribute('user');




    next.addEventListener('click',(e)=>{
        //security disabler
            next.disabled=true;
        setTimeout(()=>{
            next.disabled=false;

        },1000)

        //*******
        if(pager==1){

        //collect info
        let selection=document.querySelector('select');
        let option=selection.options[selection.selectedIndex];
        if(option.value!=''){
            selectiondata=option.value
            let badges=userbadges.split(',');
            let check=false;
            for(let k in badges){
                if(badges[k]==option.value){check=true;break;}
            }
            if(check){
                
        e.preventDefault();
        //animate container
        cnt.className='hide';
        //***********

                
        //build container interior
    let main=document.createElement('h1');
    main.id='main';
    main.textContent='Choose Classroom \n Properties'

    
let titlecnt=document.createElement('div');
titlecnt.id='title-container';
let desccnt=document.createElement('div');
desccnt.id='description-container';
let tagscnt=document.createElement('div');
tagscnt.id='tags';

 let title=document.createElement('h3');
 title.innerText='Classroom Title';

 let desctitle=document.createElement('h3');
 desctitle.innerText='Classroom Description';

 let tagtitle=document.createElement('h3');
 tagtitle.innerText='Classroom Tags';

 let titleinput=document.createElement('input');
 titleinput.placeholder='Classroom Title';
 titleinput.id='title-input'

 let descripition=document.createElement('textarea');
 descripition.placeholder="Descibe briefly classroom goals and activities";
 descripition.id='desc';
 descripition.cols=30;
 descripition.rows=10;

 
 let taginput=document.createElement('input');
 taginput.placeholder='#Data Structre Fundamentals';
 taginput.id="tag-input";

 let tagbtn=document.createElement('button');
 tagbtn.id='tag-adder';
 tagbtn.className='tag-adder';
 tagbtn.textContent='Add Tag';

titlecnt.appendChild(title)
titlecnt.appendChild(titleinput)

desccnt.appendChild(desctitle)
desccnt.appendChild(descripition)

tagscnt.appendChild(tagtitle)
tagscnt.appendChild(taginput)
tagscnt.appendChild(tagbtn)




        //***********
        
        //change container
        setTimeout(()=>{
          cnt.innerHTML='';
          cnt.appendChild(main);
          cnt.appendChild(titlecnt);
          cnt.appendChild(desccnt);
          cnt.appendChild(tagscnt);
            
        },500)
    

        //***********

        //animate container
        setTimeout(()=>{
        cnt.className='';



        
    let tagadder=document.getElementById('tag-adder')
tagadder.addEventListener('click',(e)=>{
    e.preventDefault();
    let tag=document.getElementById('tag-input')
    if(!empty(tag.value)){
        if(tag.value.length>20){
            trigger('Classroom tags should not exceed \n 20 caracters in total')
        }
        else{
        let tagdiv=document.createElement('div');
        let rembtn=document.createElement('button');
        let tagcnt=document.getElementById('tags');
        rembtn.className='remover'
        rembtn.id='remover'+removerid;
        rembtn.textContent='X'
        removerid++;
        tagdiv.id='tag';
        if(tag.value[0]=='#')
        tagdiv.textContent=tag.value;
        else
        tagdiv.textContent='#'+tag.value;
        tagdiv.appendChild(rembtn);
        classroomtags.push(tagdiv.textContent);
        tagcnt.appendChild(tagdiv)


        }

    }
    tag.value='';

})
            
        },1000)
        //***********controls 

        
       pager++;

            }
            else{
                let badgemessage='';
                for(let k in badges)badgemessage+=badges[k]+' ';
            trigger('You Cant Choose '+selectiondata+' You Only Own these badges \n'+badgemessage)
            
            }
        
        }
        else{
            selectiondata='';
            trigger('You Need To Choose An Option')
        }










        //*************




        
        }
        /***************************************************************/
        else if(pager==2){
          classroomtitle=document.getElementById('title-input').value
            if(classroomtitle!=''){
             if(classroomtitle.length>20){
                trigger('classroom title cant exceed 20 caracters in total')
             }
             else{

            
e.preventDefault();
//animate container
cnt.className='hide';
//***********


//build container interior



let main=document.createElement('h1');
main.id='main';
main.textContent='Choose Visibility'

let viscnt=document.createElement('div');
viscnt.id='vis-container';


let publiccnt=document.createElement('div');
publiccnt.id='public';
publiccnt.className='visibility'

let publicbutton=document.createElement('button');
publicbutton.id='publicbtn';
publicbutton.textContent='public'



let privatecnt=document.createElement('div');
privatecnt.id='private';
privatecnt.className='visibility'

let privatebutton=document.createElement('button');
privatebutton.id='privatebtn';
privatebutton.textContent='private'

privatecnt.appendChild(privatebutton)
publiccnt.appendChild(publicbutton)

viscnt.appendChild(publiccnt)
viscnt.appendChild(privatecnt)



//change container
setTimeout(()=>{
  cnt.innerHTML='';
  cnt.appendChild(main);
  cnt.appendChild(viscnt);
    
},500)


//***********

//animate container
setTimeout(()=>{
     next.textContent='Finish';
     next.style.backgroundColor='rgba(225, 245, 4, 0.792)';
cnt.className='';
let publicbtn=document.getElementById('publicbtn')
let privatebtn=document.getElementById('privatebtn')

let public=document.getElementById('public')
let private=document.getElementById('private')

publicbtn.addEventListener('click',(e)=>{
e.preventDefault();
privatebtn.className='dim'
private.classList.add('dim')
publicbtn.className=''
public.classList.remove('dim')
})

privatebtn.addEventListener('click',(e)=>{
e.preventDefault();
publicbtn.className='dim'
public.classList.add('dim')
privatebtn.className=''
private.classList.remove('dim')
})



    
},1000)
//***********

//******** controls


pager++;

             }
            }
}
        else if(pager==3){
            
let publicbtn=document.getElementById('publicbtn')
let privatebtn=document.getElementById('privatebtn')
if(publicbtn.className||privatebtn.className){
    if(publicbtn.className)
  socket.emit('create classroom',{useremail:user,visibility:'private',classroomtitle:classroomtitle,classroomdesc:classroomdesc,classroomtags:classroomtags,domain:selectiondata})
else
  socket.emit('create classroom',{useremail:user,visibility:'public',classroomtitle:classroomtitle,classroomdesc:classroomdesc,classroomtags:classroomtags,domain:selectiondata})
socket.on('classroom created',()=>{
    location.reload();
})
}
else{
    trigger('To Proceed You Need to choose classroom visiblity')
}

        }
        
    })
    








    
















    //*************************************************************************
    

    prev.addEventListener('click',(e)=>{
        
        //security disabler
        prev.disabled=true;
        setTimeout(()=>{
            prev.disabled=false;

        },1000)

        //*******
        if(pager==3){
        e.preventDefault();
        //animate container
        cnt.className='hide';
        next.textContent='next'
        //***********

        
        //build container interior
    let main=document.createElement('h1');
    main.id='main';
    main.textContent='Choose Classroom \n Properties'

    
let titlecnt=document.createElement('div');
titlecnt.id='title-container';
let desccnt=document.createElement('div');
desccnt.id='description-container';
let tagscnt=document.createElement('div');
tagscnt.id='tags';

 let title=document.createElement('h3');
 title.innerText='Classroom Title';

 let desctitle=document.createElement('h3');
 desctitle.innerText='Classroom Description';

 let tagtitle=document.createElement('h3');
 tagtitle.innerText='Classroom Tags';

 let titleinput=document.createElement('input');
 titleinput.placeholder='Classroom Title';
titleinput.id='title-input'
 let descripition=document.createElement('textarea');
 descripition.placeholder="Descibe briefly classroom goals and activities";
 descripition.id='desc';
 descripition.cols=30;
 descripition.rows=10;

 
 let taginput=document.createElement('input');
 taginput.placeholder='#Data Structre Fundamentals';
 taginput.id="tag-input";

 let tagbtn=document.createElement('button');
 tagbtn.id='tag-adder';
 tagbtn.className='tag-adder';
 tagbtn.textContent='Add Tag';

titlecnt.appendChild(title)
titlecnt.appendChild(titleinput)

desccnt.appendChild(desctitle)
desccnt.appendChild(descripition)

tagscnt.appendChild(tagtitle)
tagscnt.appendChild(taginput)
tagscnt.appendChild(tagbtn)




        //***********
        
        //change container
        setTimeout(()=>{
          cnt.innerHTML='';
          cnt.appendChild(main);
          cnt.appendChild(titlecnt);
          cnt.appendChild(desccnt);
          cnt.appendChild(tagscnt);
            
        },500)
    

        //***********

        //animate container
        setTimeout(()=>{
        cnt.className='';



        
    let tagadder=document.getElementById('tag-adder')

tagadder.addEventListener('click',(e)=>{
    e.preventDefault();
    let tag=document.getElementById('tag-input')
    if(!empty(tag.value)){
        if(tag.value.length>20){
            trigger('Classroom tags should not exceed \n 20 caracters in total')
        }
        else{
        let tagdiv=document.createElement('div');
        let rembtn=document.createElement('button');
        let tagcnt=document.getElementById('tags');
        rembtn.className='remover'
        rembtn.id='remover'+removerid;
        rembtn.textContent='X'
        removerid++;
        tagdiv.id='tag';
        if(tag.value[0]=='#')
        tagdiv.textContent=tag.value;
        else
        tagdiv.textContent='#'+tag.value;
        tagdiv.appendChild(rembtn);
        tagcnt.appendChild(tagdiv)


        }

    }
    tag.value='';

})
            
        },1000)
        //***********controls 

        
       pager--;
        }
        /***************************************************************/
        else if(pager==2){

            
            
        e.preventDefault();
        //animate container
        cnt.className='hide';
        //***********

        



        //build container interior
          let title=document.createElement('h1')
          let prog=document.createElement('div')
          prog.id='progress'
          title.id='main'
          title.textContent='Choose Classroom Domain'
          let select=document.createElement('select')
          let opt=document.createElement('option')
          let opt1=document.createElement('option')
          let opt2=document.createElement('option')
          let opt3=document.createElement('option')

          opt.textContent='Domain'
          opt1.textContent='C++'
          opt2.textContent='JAVA'
          opt3.textContent='PYTHON'
          opt.value=''
          opt1.value='C++'
          opt2.value='JAVA'
          opt3.value='PYTHON'
          select.appendChild(opt);
          select.appendChild(opt1);
          select.appendChild(opt2);
          select.appendChild(opt3);



        //***********
        
        //change container
        setTimeout(()=>{
          cnt.innerHTML='';
          cnt.appendChild(prog);
          cnt.appendChild(title);
          cnt.appendChild(select);
          cnt.className='';
            
        },1000)



            pager--;
        }
        
    })
    
</script>
</html>